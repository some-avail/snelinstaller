Manual of Snel_installer - version 2.2

FAQ
-Does snel-installer overwrite pre-existing folders and files?
Yes it does.
-Is an uninstaller supported?
Not at this time.



HOW TU USE SnelInstaller
Format of the installation-definition-file (def-file):
it contains multiple blocks with specific tasks.
A separator-string divides the blocks.
Each block-header is a specific string written in
capital letters. This header-string determines the 
handling of the block.

The lines after the block-header contain the actual 
install-data. The order of line-numbers is relevant to
how they are handled by the installer. So the install-data 
is order-based; this is usefull to minimize the 
text-input-work. (as opposed to name-based but then 
on each line a name must be typed.)


The first line after the header is allways a 
comment-line and should tell what the block does.

The second line is allways an arguments-line in which additional 
arguments can be added with a format:
arguments---arg1=value1,,arg2=value2
 
Currently supported arguments (second line of each block): 
- for block: VARIABLES TO SET
the variable-separator (see below)
- for block: TARGET-LOCATION AND SOURCE-FILES TO COPY
linux_set_exe=1			enable executable bits for executable files in linux
linux_use_sudo=1		use linux-admin rights (but then call also like: sudo snel_installer)

A variable-block "VARIABLES TO SET" is added since SI 2.2 in which short 
place-holders can be defined for long paths. See below for more explanation. 
Variables are currently only supported for paths; maybe lateron it will be 
done by substituting all the vars in the file before do any other handling.

The block "EDIT FILE (ADD, DELETE, REPLACE LINES)" has three possible
operations: inserting lines, deleting lines and replacing a single line.
The operations are performed on one or more lines that are located by 
the variables target-file, search-direction, occurrence, locating-string and 
line-orientation (before, after or on). The latter indicates the orientation
of the operation relative to the located line.
The insertions-operation can also add empty lines. The 
replacement-operation can only work ON the located line. The line that is 
searched is unique together the occurrence of the 
search-string. For the locating of the search-needy sentence it is 
possible to use a (unique) front-part of the sentence as search-string.
(instead of the entire sentence).
If your search-config is faulty and does not deliver a 
located line, SI will give you an error. (e.g. if you ask for the 4th
occurence of a search-string and there are only two occurrences.)

Below is a description of the definition which explains how 
to fill in the lines and what the installer expects.

The last block is EXECUTE SHELL-COMMANDS.
Any arbitrary linux-command can be executed here.



VARIABLES TO SET
your-comment-here
arguments---separator=#
varname1=/some-long/path
varname2=/another/long/path


DIRECTORIES TO CREATE
your-comment-here
arguments---none (default is none, above you see available args)
-list all the directories to be created either with full paths,
(but home-dir sign (~) is filled in automatically) or with 
help of variables. The vars must -while calling- be surrounded 
by the var-separator, defaultly #.
(all subdirs must be created separately; 
if dirs allready exist the creation is skipped): sample-list
#varname1#
#varname2#
~/some-path-in-the-home-dir
>----------------------------------<
TARGET-LOCATION AND SOURCE-FILES TO COPY
your-comment-here
arguments---none
-target-location-path (all paths can have tildes or path-vars)
-source-location-path (this line new since SI 2.1)
-then a vertical list of all source-files coming from above 
source-location and to be copied to the above target-location.
No vars can be used in this file-only list.
>----------------------------------<
TARGET-LOCATION AND SOURCE-FILES TO COPY
your-comment-here
arguments---none
and so many as neccessary
>----------------------------------<
EDIT FILE (ADD, DELETE, REPLACE LINES)
your-comment-here
arguments---none
operation; pick from: insertions, deletions or replacement
file-path to the file to edit (path-vars and tilde usable)
search-direction: forward or backward
occurence of search-string (1-based number)
search-string = locating-string (place where to put the commands)
relative position to search-string = line-orientation (before, on, after)
Depending of above chosen operation, do one of the following:
Then for insertions place here multiple text-lines (commands) you want to insert.
For deletions the number of lines you want to delete. (on, after or before)
For replacement the string to-replace, and the to replace-to.
end-of-new-lines-here (fixed string so that installer knows the end)
>----------------------------------<
EDIT FILE (ADD, DELETE, REPLACE LINES)
your-comment-here
arguments---none
and so many as neccessary
>----------------------------------<
EXECUTE SHELL-COMMANDS - IN ORDER
your-comment-here
arguments---none
my command1
my command2
>----------------------------------<
