Manual of Snel_installer - version 2.3


HOW TU USE SnelInstaller

Open a terminal and go to the place where 
your snelinstaller-program lives
(snel_installer or snel_installer.exe). 
Type in the following command:

./snel_installer your-install-def.txt
or the co-delivered sample-file:
./snel_installer ./test_projects/basic_sample/basic-sample-01_install-def-si_2.3.txt

That's quickly done; the work is off-course in the authoring of
the install-definiton-file. While reading this manual 
take a regular look at the sample: basic-sample-01_install-def-si_2.3.txt

Allthough above a generic name is used for ease of use, 
the following name-format is recommended:
YourProject_install-def-si_x.y.txt
where x.y stands for the version of the executable 
snel_installer (linux) or snel_installer.exe (future windows).

About the inner format of the installation-definition-file (def-file):
it contains multiple blocks with specific tasks.
A separator-string divides the blocks.
Each block-header is a specific string written in
capital letters. This header-string determines the 
handling of the block. Following headers exist:

VARIABLES TO SET
DIRECTORIES TO CREATE
TARGET-LOCATION AND SOURCE-FILES TO COPY
EDIT FILE (ADD, DELETE, REPLACE LINES
EXECUTE SHELL-COMMANDS - IN ORDER
CALL OTHER INSTALLATIONS


The lines after the block-header contain the actual 
install-data. The order of line-types is fixed and relevant to
how they are handled by the installer. So the install-data 
is order-based; this is usefull to minimize the 
text-input-work. (as opposed to name-based; but then 
on each line a name must be typed.)

The first line after the header is allways a 
comment-line and should tell what the block does.

The second line is allways an arguments-line in which additional 
arguments can be added with a format:
arguments---arg1=value1,,arg2=value2
 
Currently supported arguments (second line of each block): 
- for block: VARIABLES TO SET
the variable-separator (see below)
- for block: TARGET-LOCATION AND SOURCE-FILES TO COPY
linux_set_exe=1			  enable executable bits for executable files in linux
linux_use_sudo=1		  use linux-admin rights (but then call also like: sudo snel_installer)
copy_branch=1         copy a entire branch recursively
sample_permissions=1  take the perms over from the source-branch (with branch-copy)


The following lines are different for each block.

Some info on specific blocks:

A variable-block "VARIABLES TO SET" is added since SI 2.2 in which short 
place-holders can be defined for long paths, but they can be used for any 
purpose. The variables are substituted in the file before any other handling.

In defining paths, it is always important to remember where the program 
snel_installer(.exe) is located, because all paths depend on it. From the location 
of the program forward it usually is best to use relative paths for all other files.

The block "EDIT FILE (ADD, DELETE, REPLACE LINES)" has three possible
operations: inserting lines, deleting lines and replacing a single line.
The operations are performed on one or more lines that are located by 
the variables target-file, search-direction, occurrence, locating-string and 
line-orientation (before, after or on). The latter indicates the orientation
of the operation relative to the located line.
The insertions-operation can also add empty lines. The 
replacement-operation can only work ON the located line. The line that is 
searched is unique together the occurrence of the 
search-string. For the locating of the search-needy sentence it is 
possible to use a (unique) front-part of the sentence as search-string.
(instead of the entire sentence).
If your search-config is faulty and does not deliver a 
located line, SI will give you an error. (e.g. if you ask for the 4th
occurence of a search-string and there are only two occurrences.)

The before-last block is EXECUTE SHELL-COMMANDS.
Any arbitrary linux-command can be executed here.

The block "CALL OTHER INSTALLATIONS" is added in SI 2.3 and enables the 
calling of subordinate installations / def-files. Multiple install-defs 
can be called, whereby each one can call another one, creating the possibility 
of quite flexible installations. In defining the path of the defs 
one must reckon with the location of the executable.

Below is a description of the definition which explains how 
to fill in the lines and what the installer expects.

The block-phases can be ordered in the way that makes sense. For example, 
when dependencies must be installed first, the subordinate-installs can be put
right behind the variables-to-set.

=============================================


VARIABLES TO SET
your-comment-here
arguments---separator=#
varname1=/some-long/path
varname2=/another/long/path


DIRECTORIES TO CREATE
your-comment-here
arguments---none (default is none, above you see available args)
-list all the directories to be created either with full paths,
(but home-dir sign (~) is filled in automatically) or with 
help of variables. The vars must -while calling- be surrounded 
by the var-separator, defaultly #.
(from 2.3 onward all super-dirs are co-created; that means when
dir a and b dont exist yet, "a/b" creates them both); sample-list
#varname1#
#varname2#
~/some-path-in-the-home-dir
>----------------------------------<
TARGET-LOCATION AND SOURCE-FILES TO COPY
your-comment-here
arguments---none
-target-location-path (all paths can have tildes or path-vars)
-source-location-path (this line new since SI 2.1)
-then a vertical list of all source-files coming from above 
source-location and to be copied to the above target-location.
>----------------------------------<
TARGET-LOCATION AND SOURCE-FILES TO COPY
comment: You can copy a full branch aswell since SI 2.3
arguments---copy_branch=1,,sample_permissions=1
-target-location-path (all paths can have tildes or path-vars)
-source-location-path (this line new since SI 2.1)
No files are needed here
>----------------------------------<
EDIT FILE (ADD, DELETE, REPLACE LINES)
your-comment-here
arguments---none
operation; pick from: insertions, deletions or replacement
file-path to the file to edit (path-vars and tilde usable)
search-direction: forward or backward
occurence of search-string (1-based number)
search-string = locating-string (place where to put the commands)
relative position to search-string = line-orientation (before, on, after)
Depending of above chosen operation, do one of the following:
Then for insertions place here multiple text-lines (commands) you want to insert.
For deletions the number of lines you want to delete. (on, after or before)
For replacement the string to-replace, and the to replace-to.
end-of-new-lines-here (fixed string so that installer knows the end)
>----------------------------------<
EDIT FILE (ADD, DELETE, REPLACE LINES)
your-comment-here
arguments---none
and so many as neccessary
>----------------------------------<
EXECUTE SHELL-COMMANDS - IN ORDER
your-comment-here
arguments---none
my command1
my command2
>----------------------------------<
CALL OTHER INSTALLATIONS
your-comment-here
arguments---none
#varname1#/subordinate-install-def.txt
#varname1#/another-subinstall.txt
>----------------------------------<
#END-OF-BLOCKS

